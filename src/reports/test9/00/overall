Model type: VAErcp
inputsize: ListWrapper([ListWrapper([4, 4]), ListWrapper([8, 8])])
inlayersize: ListWrapper([64, 32, 16])
latentsize: 4
outlayersize: ListWrapper([16, 32, 64])
outputsize: ListWrapper([ListWrapper([4, 4, 1, 1])])
Model has 2 inputs, class 0 is where the second input is drawn from a normal distribution with mean of the first input, class 1 is where it isnt. Proper implementation of VAE predicting distribution without best F1 using encoder
losses: ['cl5', 'mean_absolute_error', 'mean_absolute_error', 'ignore']
loss_weights: [1, 1, 1, 0]
CEweights: [[1, 10], [1, 1]]
Average accuracy: 0.9631474103585658
Balanced acc: 0.608
Average specificity: 0.966
Average sensitivity (Detection rate): 0.25
Average loss: [0.03380027]
Average False Alarm: 0.75
Average F1: 0.05128205128205128
Average cm:
||True 0| True 1|
|-|-|-|
|Predicted 0|241.5|0.75
|Predicted 1|8.5|0.25

|Acc|Spec|Loss|
0.9631474103585658|0.966|[0.03380027]
CV took 114.98950918699938 seconds
Pure training took 112.61458961799963
Test result on unseen data:
Average accuracy: 0.61
Balanced acc: 0.61
Average specificity: 0.3625
Average sensitivity (Detection rate): 0.8575
Average loss: nan
Average False Alarm: 0.1425
Average F1: 0.687374749498998
Average cm:
||True 0| True 1|
|-|-|-|
|Predicted 0|36.25|14.25
|Predicted 1|63.75|85.75

|Acc|Spec|Loss|
0.61|0.3625|nan
