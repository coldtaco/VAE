Model has 2 inputs, class 0 is where the second input is drawn from a normal distribution with mean of the first input, class 1 is where it isnt. using distance as outlier metric                
losses: ['mean_absolute_error', 'mean_absolute_error', 'ignore']
loss_weights: [1, 1, 0]
CEweights: [[1, 1], [1, 1]]
Average accuracy: 0.8307692307692308
Balanced acc: 0.9083333333333334
Average specificity: 0.8166666666666668
Average sensitivity (Detection rate): 1.0
Average loss: [0.75764822]
Average False Alarm: 0.0
Average F1: 0.47619047619047616
Average cm:
||True 0| True 1|
|-|-|-|
|Predicted 0|9.8|0.0
|Predicted 1|2.2|1.0

|Acc|Spec|Loss|
0.8307692307692308|0.8166666666666668|[0.75764822]
CV took 63.54152120099752 seconds
Pure training took 58.69253665799624
Test result on unseen data:
Average accuracy: 0.8440000000000001
Balanced acc: 0.8440000000000001
Average specificity: 0.914
Average sensitivity (Detection rate): 0.774
Average loss: nan
Average False Alarm: 0.226
Average F1: 0.832258064516129
Average cm:
||True 0| True 1|
|-|-|-|
|Predicted 0|91.4|22.6
|Predicted 1|8.6|77.4

|Acc|Spec|Loss|
0.8440000000000001|0.914|nan
