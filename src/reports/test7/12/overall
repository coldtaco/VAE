Model type: VAErcp
inputsize: ListWrapper([ListWrapper([4, 4]), ListWrapper([8, 8])])
inlayersize: ListWrapper([64, 32, 16])
latentsize: 4
outlayersize: ListWrapper([16, 32, 64])
outputsize: ListWrapper([ListWrapper([4, 4, 1, 1])])
Model has 2 inputs, class 0 is where the second input is drawn from a normal distribution with mean of the first input, class 1 is where it isnt. Proper implementation of VAE predicting distribution with best F1 with no outliers
losses: ['cl5', 'mean_absolute_error', 'mean_absolute_error', 'ignore']
loss_weights: [1, 1, 1, 0]
CEweights: [[1, 10], [1, 1]]
Average accuracy: 0.765
Balanced acc: nan
Average specificity: 0.765
Average sensitivity (Detection rate): nan
Average loss: [0.63745241]
Average False Alarm: nan
Average F1: 0.0
Average cm:
||True 0| True 1|
|-|-|-|
|Predicted 0|9.180000000000001|0.0
|Predicted 1|2.82|0.0

|Acc|Spec|Loss|
0.765|0.765|[0.63745241]
CV took 90.7357223664003 seconds
Pure training took 83.30038893299988
Test result on unseen data:
Average accuracy: 0.6003
Balanced acc: 0.6003000000000001
Average specificity: 0.3056
Average sensitivity (Detection rate): 0.895
Average loss: nan
Average False Alarm: 0.10499999999999998
Average F1: 0.6912798331659844
Average cm:
||True 0| True 1|
|-|-|-|
|Predicted 0|30.56000000000001|10.5
|Predicted 1|69.44000000000001|89.50000000000001

|Acc|Spec|Loss|
0.6003|0.3056|nan
