Model has 2 inputs, class 0 is where the second input is drawn from a normal distribution with mean of the first input, class 1 is where it isnt. using distance as outlier metric with no ouliers                
losses: ['mean_absolute_error', 'mean_absolute_error', 'ignore']
loss_weights: [1, 1, 0]
CEweights: [[1, 1], [1, 1]]
Average accuracy: 0.8083333333333332
Balanced acc: nan
Average specificity: 0.8083333333333332
Average sensitivity (Detection rate): nan
Average loss: [0.59686992]
Average False Alarm: nan
Average F1: 0.0
Average cm:
||True 0| True 1|
|-|-|-|
|Predicted 0|9.7|0.0
|Predicted 1|2.3|0.0

|Acc|Spec|Loss|
0.8083333333333332|0.8083333333333332|[0.59686992]
CV took 75.25776298500023 seconds
Pure training took 70.36201224699971
Test result on unseen data:
Average accuracy: 0.8455000000000001
Balanced acc: 0.8455
Average specificity: 0.892
Average sensitivity (Detection rate): 0.799
Average loss: nan
Average False Alarm: 0.201
Average F1: 0.8379653906659674
Average cm:
||True 0| True 1|
|-|-|-|
|Predicted 0|89.2|20.1
|Predicted 1|10.8|79.9

|Acc|Spec|Loss|
0.8455000000000001|0.892|nan
