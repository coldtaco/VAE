Model type: SVAE
inputsize: [[4, 4], [8, 8]]
inlayersize: [64, 32, 16]
latentsize: 4
outlayersize: ListWrapper([16, 32, 64])
outputsize: [[4, 4], [1, 1]]
fc_size: [64, 32, 1]
Model has 2 inputs, class 0 is where the second input is drawn from a normal distributionwith mean of the first input, class 1 is where it isnt. Proper implementation of SVAE
losses: ['mean_absolute_error', 'mean_absolute_error', 'KLD', 'weighted_ce']
loss_weights: [1, 1, 1, 10]
CEweights: [[1, 10], [1, 1]]
Average accuracy: 0.9600000000000001
Balanced acc: 0.8683333333333334
Average specificity: 0.9766666666666667
Average sensitivity (Detection rate): 0.76
Average loss: [4.86248495]
Average False Alarm: 0.24000000000000002
Average F1: 0.7450980392156862
Average cm:
||True 0| True 1|
|-|-|-|
|Predicted 0|11.719999999999999|0.24
|Predicted 1|0.2800000000000001|0.7599999999999999

|Acc|Spec|Loss|
0.9600000000000001|0.9766666666666667|[4.86248495]
CV took 69.2330207403982 seconds
Pure training took 65.30230943059578
Test result on unseen data:
Average accuracy: 0.6513
Balanced acc: 0.6513
Average specificity: 0.9590000000000001
Average sensitivity (Detection rate): 0.34359999999999996
Average loss: nan
Average False Alarm: 0.6564000000000001
Average F1: 0.49631662574028595
Average cm:
||True 0| True 1|
|-|-|-|
|Predicted 0|95.9|65.64000000000001
|Predicted 1|4.1|34.36

|Acc|Spec|Loss|
0.6513|0.9590000000000001|nan
