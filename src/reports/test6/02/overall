Model type: VAErcp
inputsize: ListWrapper([ListWrapper([4, 4]), ListWrapper([8, 8])])
inlayersize: ListWrapper([64, 32, 16])
latentsize: 4
outlayersize: ListWrapper([16, 32, 64])
outputsize: ListWrapper([ListWrapper([4, 4, 1, 1])])
Model has 2 inputs, class 0 is where the second input is drawn from a normal distributionwith mean of the first input, class 1 is where it isnt. Proper implementation of VAE predicting distribution without best F1
losses: ['cl5', 'mean_absolute_error', 'mean_absolute_error', 'ignore']
loss_weights: [1, 1, 1, 0]
CEweights: [[1, 10], [1, 1]]
Average accuracy: 0.765
Balanced acc: nan
Average specificity: 0.765
Average sensitivity (Detection rate): nan
Average loss: [0.63832668]
Average False Alarm: nan
Average F1: 0.0
Average cm:
||True 0| True 1|
|-|-|-|
|Predicted 0|9.180000000000001|0.0
|Predicted 1|2.82|0.0

|Acc|Spec|Loss|
0.765|0.765|[0.63832668]
CV took 89.10250129399938 seconds
Pure training took 82.13554020340015
Test result on unseen data:
Average accuracy: 0.5493
Balanced acc: 0.5493
Average specificity: 0.6706
Average sensitivity (Detection rate): 0.428
Average loss: nan
Average False Alarm: 0.5720000000000001
Average F1: 0.4870831910777284
Average cm:
||True 0| True 1|
|-|-|-|
|Predicted 0|67.06|57.2
|Predicted 1|32.940000000000005|42.8

|Acc|Spec|Loss|
0.5493|0.6706|nan
