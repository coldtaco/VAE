Model has 2 inputs, class 0 is where the second input is drawn from a normal distribution with mean of the first input, class 1 is where it isnt. using distance as outlier metric                
losses: ['mean_absolute_error', 'mean_absolute_error', 'ignore']
loss_weights: [1, 1, 0]
CEweights: [[1, 1], [1, 1]]
Average accuracy: 0.7416666666666667
Balanced acc: nan
Average specificity: 0.7416666666666667
Average sensitivity (Detection rate): nan
Average loss: [0.64587929]
Average False Alarm: nan
Average F1: 0.0
Average cm:
||True 0| True 1|
|-|-|-|
|Predicted 0|8.9|0.0
|Predicted 1|3.1|0.0

|Acc|Spec|Loss|
0.7416666666666667|0.7416666666666667|[0.64587929]
CV took 50.36875411500296 seconds
Pure training took 45.327904617006425
Test result on unseen data:
Average accuracy: 0.865
Balanced acc: 0.865
Average specificity: 0.932
Average sensitivity (Detection rate): 0.7979999999999999
Average loss: nan
Average False Alarm: 0.20199999999999999
Average F1: 0.8553054662379421
Average cm:
||True 0| True 1|
|-|-|-|
|Predicted 0|93.2|20.2
|Predicted 1|6.8|79.8

|Acc|Spec|Loss|
0.865|0.932|nan
