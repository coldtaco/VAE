Model has 2 inputs, class 0 is where the second input is drawn from a normal distribution with mean of the first input, class 1 is where it isnt. using distance as outlier metric                
losses: ['mean_absolute_error', 'mean_absolute_error', 'ignore']
loss_weights: [1, 1, 0]
CEweights: [[1, 1], [1, 1]]
Average accuracy: 0.9166666666666666
Balanced acc: nan
Average specificity: 0.9166666666666666
Average sensitivity (Detection rate): nan
Average loss: [0.6494734]
Average False Alarm: nan
Average F1: 0.0
Average cm:
||True 0| True 1|
|-|-|-|
|Predicted 0|11.0|0.0
|Predicted 1|1.0|0.0

|Acc|Spec|Loss|
0.9166666666666666|0.9166666666666666|[0.6494734]
CV took 57.282186014002946 seconds
Pure training took 53.17670047399952
Test result on unseen data:
Average accuracy: 0.866
Balanced acc: 0.8660000000000001
Average specificity: 0.922
Average sensitivity (Detection rate): 0.81
Average loss: nan
Average False Alarm: 0.19
Average F1: 0.858050847457627
Average cm:
||True 0| True 1|
|-|-|-|
|Predicted 0|92.2|19.0
|Predicted 1|7.8|81.0

|Acc|Spec|Loss|
0.866|0.922|nan
