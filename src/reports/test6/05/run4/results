Model has 2 inputs, class 0 is where the second input is drawn from a normal distribution with mean of the first input, class 1 is where it isnt. using distance as outlier metric                
losses: ['mean_absolute_error', 'mean_absolute_error', 'ignore']
loss_weights: [1, 1, 0]
CEweights: [[1, 1], [1, 1]]
Average accuracy: 0.7416666666666667
Balanced acc: nan
Average specificity: 0.7416666666666667
Average sensitivity (Detection rate): nan
Average loss: [0.74824986]
Average False Alarm: nan
Average F1: 0.0
Average cm:
||True 0| True 1|
|-|-|-|
|Predicted 0|8.9|0.0
|Predicted 1|3.1|0.0

|Acc|Spec|Loss|
0.7416666666666667|0.7416666666666667|[0.74824986]
CV took 48.60492543500368 seconds
Pure training took 43.434459658004926
Test result on unseen data:
Average accuracy: 0.8675
Balanced acc: 0.8674999999999999
Average specificity: 0.92
Average sensitivity (Detection rate): 0.815
Average loss: nan
Average False Alarm: 0.185
Average F1: 0.8601583113456465
Average cm:
||True 0| True 1|
|-|-|-|
|Predicted 0|92.0|18.5
|Predicted 1|8.0|81.5

|Acc|Spec|Loss|
0.8675|0.92|nan
