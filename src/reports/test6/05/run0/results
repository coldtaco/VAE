Model has 2 inputs, class 0 is where the second input is drawn from a normal distribution with mean of the first input, class 1 is where it isnt. using distance as outlier metric                
losses: ['mean_absolute_error', 'mean_absolute_error', 'ignore']
loss_weights: [1, 1, 0]
CEweights: [[1, 1], [1, 1]]
Average accuracy: 0.7083333333333334
Balanced acc: nan
Average specificity: 0.7083333333333334
Average sensitivity (Detection rate): nan
Average loss: [0.72911717]
Average False Alarm: nan
Average F1: 0.0
Average cm:
||True 0| True 1|
|-|-|-|
|Predicted 0|8.5|0.0
|Predicted 1|3.5|0.0

|Acc|Spec|Loss|
0.7083333333333334|0.7083333333333334|[0.72911717]
CV took 53.12163653300013 seconds
Pure training took 48.041865552011586
Test result on unseen data:
Average accuracy: 0.8704999999999999
Balanced acc: 0.8704999999999999
Average specificity: 0.9179999999999999
Average sensitivity (Detection rate): 0.823
Average loss: nan
Average False Alarm: 0.177
Average F1: 0.8640419947506562
Average cm:
||True 0| True 1|
|-|-|-|
|Predicted 0|91.8|17.7
|Predicted 1|8.2|82.3

|Acc|Spec|Loss|
0.8704999999999999|0.9179999999999999|nan
