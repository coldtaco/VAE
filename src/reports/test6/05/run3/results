Model has 2 inputs, class 0 is where the second input is drawn from a normal distribution with mean of the first input, class 1 is where it isnt. using distance as outlier metric                
losses: ['mean_absolute_error', 'mean_absolute_error', 'ignore']
loss_weights: [1, 1, 0]
CEweights: [[1, 1], [1, 1]]
Average accuracy: 0.8166666666666668
Balanced acc: nan
Average specificity: 0.8166666666666668
Average sensitivity (Detection rate): nan
Average loss: [0.5689962]
Average False Alarm: nan
Average F1: 0.0
Average cm:
||True 0| True 1|
|-|-|-|
|Predicted 0|9.8|0.0
|Predicted 1|2.2|0.0

|Acc|Spec|Loss|
0.8166666666666668|0.8166666666666668|[0.5689962]
CV took 76.15511458700348 seconds
Pure training took 71.35572830600358
Test result on unseen data:
Average accuracy: 0.845
Balanced acc: 0.845
Average specificity: 0.8959999999999999
Average sensitivity (Detection rate): 0.794
Average loss: nan
Average False Alarm: 0.20600000000000002
Average F1: 0.8366701791359326
Average cm:
||True 0| True 1|
|-|-|-|
|Predicted 0|89.6|20.6
|Predicted 1|10.4|79.4

|Acc|Spec|Loss|
0.845|0.8959999999999999|nan
