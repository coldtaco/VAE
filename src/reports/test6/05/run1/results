Model has 2 inputs, class 0 is where the second input is drawn from a normal distribution with mean of the first input, class 1 is where it isnt. using distance as outlier metric                
losses: ['mean_absolute_error', 'mean_absolute_error', 'ignore']
loss_weights: [1, 1, 0]
CEweights: [[1, 1], [1, 1]]
Average accuracy: 0.8666666666666667
Balanced acc: nan
Average specificity: 0.8666666666666667
Average sensitivity (Detection rate): nan
Average loss: [0.61936907]
Average False Alarm: nan
Average F1: 0.0
Average cm:
||True 0| True 1|
|-|-|-|
|Predicted 0|10.4|0.0
|Predicted 1|1.6|0.0

|Acc|Spec|Loss|
0.8666666666666667|0.8666666666666667|[0.61936907]
CV took 62.0972993679934 seconds
Pure training took 57.87852465199467
Test result on unseen data:
Average accuracy: 0.8515
Balanced acc: 0.8515
Average specificity: 0.903
Average sensitivity (Detection rate): 0.8
Average loss: nan
Average False Alarm: 0.2
Average F1: 0.8434370057986295
Average cm:
||True 0| True 1|
|-|-|-|
|Predicted 0|90.3|20.0
|Predicted 1|9.7|80.0

|Acc|Spec|Loss|
0.8515|0.903|nan
