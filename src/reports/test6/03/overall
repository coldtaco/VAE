Model type: VAErcp
inputsize: ListWrapper([ListWrapper([4, 4]), ListWrapper([8, 8])])
inlayersize: ListWrapper([64, 32, 16])
latentsize: 4
outlayersize: ListWrapper([16, 32, 64])
outputsize: ListWrapper([ListWrapper([4, 4, 1, 1])])
Model has 2 inputs, class 0 is where the second input is drawn from a normal distributionwith mean of the first input, class 1 is where it isnt. Proper implementation of VAE predicting distribution with best F1
losses: ['cl5', 'mean_absolute_error', 'mean_absolute_error', 'ignore']
loss_weights: [1, 1, 1, 0]
CEweights: [[1, 10], [1, 1]]
Average accuracy: 0.7666666666666666
Balanced acc: nan
Average specificity: 0.7666666666666666
Average sensitivity (Detection rate): nan
Average loss: [0.63980844]
Average False Alarm: nan
Average F1: 0.0
Average cm:
||True 0| True 1|
|-|-|-|
|Predicted 0|9.2|0.0
|Predicted 1|2.8|0.0

|Acc|Spec|Loss|
0.7666666666666666|0.7666666666666666|[0.63980844]
CV took 89.15803747880345 seconds
Pure training took 81.74098040279932
Test result on unseen data:
Average accuracy: 0.6026
Balanced acc: 0.6026
Average specificity: 0.31099999999999994
Average sensitivity (Detection rate): 0.8942
Average loss: nan
Average False Alarm: 0.1058
Average F1: 0.6923196035924434
Average cm:
||True 0| True 1|
|-|-|-|
|Predicted 0|31.099999999999994|10.58
|Predicted 1|68.9|89.42

|Acc|Spec|Loss|
0.6026|0.31099999999999994|nan
