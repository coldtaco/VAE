Model has 2 inputs, class 0 is where the second input is drawn from a normal distribution with mean of the first input, class 1 is where it isnt. using distance as outlier metric with no ouliers                
losses: ['mean_absolute_error', 'mean_absolute_error', 'ignore']
loss_weights: [1, 1, 0]
CEweights: [[1, 1], [1, 1]]
Average accuracy: 0.8909999999999999
Balanced acc: nan
Average specificity: 0.8909999999999999
Average sensitivity (Detection rate): nan
Average loss: [0.56312256]
Average False Alarm: nan
Average F1: 0.0
Average cm:
||True 0| True 1|
|-|-|-|
|Predicted 0|89.1|0.0
|Predicted 1|10.9|0.0

|Acc|Spec|Loss|
0.8909999999999999|0.8909999999999999|[0.56312256]
CV took 227.4538445710059 seconds
Pure training took 222.61459050099802
Test result on unseen data:
Average accuracy: 0.8709
Balanced acc: 0.8709
Average specificity: 0.866
Average sensitivity (Detection rate): 0.8757999999999999
Average loss: nan
Average False Alarm: 0.1242
Average F1: 0.8715295054234252
Average cm:
||True 0| True 1|
|-|-|-|
|Predicted 0|433.0|62.1
|Predicted 1|67.0|437.9

|Acc|Spec|Loss|
0.8709|0.866|nan
