Model type: VampriorRcp
inputsize: ListWrapper([ListWrapper([4, 4]), ListWrapper([8, 8])])
inlayersize: ListWrapper([64, 32, 16])
latentsize: 4
outlayersize: ListWrapper([16, 32, 64])
outputsize: ListWrapper([ListWrapper([1, 1])])
Model has 2 inputs, class 0 is where the second input is drawn from a normal distribution with mean of the first input, class 1 is where it isnt. Proper implementation of VAE predicting distribution without best F1 using encoder
losses: ['mean_absolute_error', 'mean_absolute_error', 'passon', 'passon']
loss_weights: [1, 1, 5, 10]
CEweights: [[1, 10], [1, 1]]
Average accuracy: 0.0
Balanced acc: nan
Average specificity: 0.0
Average sensitivity (Detection rate): nan
Average loss: [2878.05517675]
Average False Alarm: nan
Average F1: 0.0
Average cm:
||True 0| True 1|
|-|-|-|
|Predicted 0|0.0|0.0
|Predicted 1|100.0|0.0

|Acc|Spec|Loss|
0.0|0.0|[2878.05517675]
CV took 1641.4935951307993 seconds
Pure training took 1633.4739128865995
Test result on unseen data:
Average accuracy: 0.5825
Balanced acc: 0.5825
Average specificity: 0.23
Average sensitivity (Detection rate): 0.935
Average loss: nan
Average False Alarm: 0.065
Average F1: 0.6913123844731978
Average cm:
||True 0| True 1|
|-|-|-|
|Predicted 0|23.0|6.5
|Predicted 1|77.0|93.5

|Acc|Spec|Loss|
0.5825|0.23|nan
