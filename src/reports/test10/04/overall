Model type: Vamprior
inputsize: ListWrapper([ListWrapper([4, 4]), ListWrapper([8, 8])])
inlayersize: ListWrapper([64, 32, 16])
latentsize: 4
outlayersize: ListWrapper([16, 32, 64])
outputsize: ListWrapper([ListWrapper([4, 4]), ListWrapper([1, 1])])
Model has 2 inputs, class 0 is where the second input is drawn from a normal distribution with mean of the first input, class 1 is where it isnt. Vampprior trainign with outliers                
losses: ['mean_absolute_error', 'mean_absolute_error', 'passon']
loss_weights: [1, 1, 5]
CEweights: [[1, 1], [1, 1]]
Average accuracy: 0.0636
Balanced acc: nan
Average specificity: 0.0636
Average sensitivity (Detection rate): nan
Average loss: [7.99849072]
Average False Alarm: nan
Average F1: 0.0
Average cm:
||True 0| True 1|
|-|-|-|
|Predicted 0|6.36|0.0
|Predicted 1|93.64|0.0

|Acc|Spec|Loss|
0.0636|0.0636|[7.99849072]
CV took 211.38303028600004 seconds
Pure training took 206.3935249663995
Test result on unseen data:
Average accuracy: 0.5542000000000001
Balanced acc: 0.5542
Average specificity: 0.1446
Average sensitivity (Detection rate): 0.9638
Average loss: nan
Average False Alarm: 0.03619999999999999
Average F1: 0.6837400681044268
Average cm:
||True 0| True 1|
|-|-|-|
|Predicted 0|14.460000000000003|3.6199999999999997
|Predicted 1|85.54|96.38000000000001

|Acc|Spec|Loss|
0.5542000000000001|0.1446|nan
