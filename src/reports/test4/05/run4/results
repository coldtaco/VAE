Model has 2 inputs, class 0 is where the second input is drawn from a normal distribution with mean of the first input, class 1 is where it isnt. using distance as outlier metric                
losses: ['mean_absolute_error', 'mean_absolute_error', 'ignore']
loss_weights: [1, 1, 0]
CEweights: [[1, 1], [1, 1]]
Average accuracy: 0.8307692307692308
Balanced acc: 0.8625
Average specificity: 0.8250000000000001
Average sensitivity (Detection rate): 0.9
Average loss: [0.60857555]
Average False Alarm: 0.1
Average F1: 0.45
Average cm:
||True 0| True 1|
|-|-|-|
|Predicted 0|9.9|0.1
|Predicted 1|2.1|0.9

|Acc|Spec|Loss|
0.8307692307692308|0.8250000000000001|[0.60857555]
CV took 74.10640934700496 seconds
Pure training took 68.9665367599955
Test result on unseen data:
Average accuracy: 0.8165
Balanced acc: 0.8165
Average specificity: 0.8340000000000001
Average sensitivity (Detection rate): 0.799
Average loss: nan
Average False Alarm: 0.201
Average F1: 0.8132315521628499
Average cm:
||True 0| True 1|
|-|-|-|
|Predicted 0|83.4|20.1
|Predicted 1|16.6|79.9

|Acc|Spec|Loss|
0.8165|0.8340000000000001|nan
