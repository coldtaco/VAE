Model has 2 inputs, class 0 is where the second input is drawn from a normal distribution with mean of the first input, class 1 is where it isnt. using distance as outlier metric                
losses: ['mean_absolute_error', 'mean_absolute_error', 'ignore']
loss_weights: [1, 1, 0]
CEweights: [[1, 1], [1, 1]]
Average accuracy: 0.7384615384615384
Balanced acc: 0.6291666666666667
Average specificity: 0.7583333333333333
Average sensitivity (Detection rate): 0.5
Average loss: [0.68528152]
Average False Alarm: 0.5
Average F1: 0.22727272727272727
Average cm:
||True 0| True 1|
|-|-|-|
|Predicted 0|9.1|0.5
|Predicted 1|2.9|0.5

|Acc|Spec|Loss|
0.7384615384615384|0.7583333333333333|[0.68528152]
CV took 74.08715797900004 seconds
Pure training took 69.95251902100063
Test result on unseen data:
Average accuracy: 0.809
Balanced acc: 0.8089999999999999
Average specificity: 0.79
Average sensitivity (Detection rate): 0.828
Average loss: nan
Average False Alarm: 0.172
Average F1: 0.8125613346418057
Average cm:
||True 0| True 1|
|-|-|-|
|Predicted 0|79.0|17.2
|Predicted 1|21.0|82.8

|Acc|Spec|Loss|
0.809|0.79|nan
