Model has 2 inputs, class 0 is where the second input is drawn from a normal distribution with mean of the first input, class 1 is where it isnt. using distance as outlier metric                
losses: ['mean_absolute_error', 'mean_absolute_error', 'ignore']
loss_weights: [1, 1, 0]
CEweights: [[1, 1], [1, 1]]
Average accuracy: 0.823076923076923
Balanced acc: 0.9041666666666666
Average specificity: 0.8083333333333332
Average sensitivity (Detection rate): 1.0
Average loss: [0.79998917]
Average False Alarm: 0.0
Average F1: 0.46511627906976744
Average cm:
||True 0| True 1|
|-|-|-|
|Predicted 0|9.7|0.0
|Predicted 1|2.3|1.0

|Acc|Spec|Loss|
0.823076923076923|0.8083333333333332|[0.79998917]
CV took 61.576866199999984 seconds
Pure training took 57.900037303999966
Test result on unseen data:
Average accuracy: 0.8534999999999999
Balanced acc: 0.8534999999999999
Average specificity: 0.914
Average sensitivity (Detection rate): 0.7929999999999999
Average loss: nan
Average False Alarm: 0.207
Average F1: 0.8440659925492284
Average cm:
||True 0| True 1|
|-|-|-|
|Predicted 0|91.4|20.7
|Predicted 1|8.6|79.3

|Acc|Spec|Loss|
0.8534999999999999|0.914|nan
