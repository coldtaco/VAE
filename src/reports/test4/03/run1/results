Model has 2 inputs, class 0 is where the second input is drawn from a normal distribution with mean of the first input, class 1 is where it isnt. using distance as outlier metric                
losses: ['mean_absolute_error', 'mean_absolute_error', 'ignore']
loss_weights: [1, 1, 0]
CEweights: [[1, 1], [1, 1]]
Average accuracy: 0.7384615384615384
Balanced acc: 0.6291666666666667
Average specificity: 0.7583333333333333
Average sensitivity (Detection rate): 0.5
Average loss: [0.69537871]
Average False Alarm: 0.5
Average F1: 0.22727272727272727
Average cm:
||True 0| True 1|
|-|-|-|
|Predicted 0|9.1|0.5
|Predicted 1|2.9|0.5

|Acc|Spec|Loss|
0.7384615384615384|0.7583333333333333|[0.69537871]
CV took 72.01395584899996 seconds
Pure training took 67.94713389500009
Test result on unseen data:
Average accuracy: 0.8080000000000002
Balanced acc: 0.808
Average specificity: 0.787
Average sensitivity (Detection rate): 0.8290000000000001
Average loss: nan
Average False Alarm: 0.171
Average F1: 0.811949069539667
Average cm:
||True 0| True 1|
|-|-|-|
|Predicted 0|78.7|17.1
|Predicted 1|21.3|82.9

|Acc|Spec|Loss|
0.8080000000000002|0.787|nan
