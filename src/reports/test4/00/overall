inputsize: ListWrapper([ListWrapper([4, 4]), ListWrapper([8, 8])])
inlayersize: ListWrapper([32, 64, 128])
latentsize: 4
outlayersize: ListWrapper([128, 64, 32])
outputsize: ListWrapper([ListWrapper([4, 4, 1, 1])])
Model has 2 inputs, class 0 is where the second input is drawn from a normal distributionwith mean of the first input, class 1 is where it isnt. Proper implementation of VAE predicting distribution without best F1
losses: ['cl5', 'mean_absolute_error', 'mean_absolute_error', 'ignore']
loss_weights: [1, 1, 1, 0]
CEweights: [[1, 10], [1, 1]]
Average accuracy: 0.8476923076923077
Balanced acc: 0.6333333333333334
Average specificity: 0.8866666666666667
Average sensitivity (Detection rate): 0.38000000000000006
Average loss: [0.36137612]
Average False Alarm: 0.62
Average F1: 0.2773722627737227
Average cm:
||True 0| True 1|
|-|-|-|
|Predicted 0|10.64|0.6199999999999999
|Predicted 1|1.3599999999999999|0.38

|Acc|Spec|Loss|
0.8476923076923077|0.8866666666666667|[0.36137612]
CV took 105.5461826576001 seconds
Pure training took 98.50160929859994
Test result on unseen data:
Average accuracy: 0.5299999999999999
Balanced acc: 0.53
Average specificity: 0.85
Average sensitivity (Detection rate): 0.21
Average loss: nan
Average False Alarm: 0.79
Average F1: 0.3088235294117647
Average cm:
||True 0| True 1|
|-|-|-|
|Predicted 0|84.99999999999999|79.0
|Predicted 1|14.999999999999996|21.0

|Acc|Spec|Loss|
0.5299999999999999|0.85|nan
