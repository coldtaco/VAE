inputsize: ListWrapper([ListWrapper([4, 4]), ListWrapper([8, 8])])
inlayersize: ListWrapper([32, 64, 128])
latentsize: 4
outlayersize: ListWrapper([128, 64, 32])
outputsize: ListWrapper([ListWrapper([4, 4, 1, 1])])
Model has 2 inputs, class 0 is where the second input is drawn from a normal distributionwith mean of the first input, class 1 is where it isnt. Proper implementation of VAE predicting distribution with best F1
losses: ['cl5', 'mean_absolute_error', 'mean_absolute_error', 'ignore']
loss_weights: [1, 1, 1, 0]
CEweights: [[1, 10], [1, 1]]
Average accuracy: 0.8476923076923076
Balanced acc: 0.6241666666666666
Average specificity: 0.8883333333333333
Average sensitivity (Detection rate): 0.36000000000000004
Average loss: [0.37183713]
Average False Alarm: 0.64
Average F1: 0.26666666666666666
Average cm:
||True 0| True 1|
|-|-|-|
|Predicted 0|10.66|0.6399999999999999
|Predicted 1|1.34|0.36

|Acc|Spec|Loss|
0.8476923076923076|0.8883333333333333|[0.37183713]
CV took 108.63991574340034 seconds
Pure training took 101.44247796120108
Test result on unseen data:
Average accuracy: 0.612
Balanced acc: 0.612
Average specificity: 0.3226
Average sensitivity (Detection rate): 0.9014
Average loss: nan
Average False Alarm: 0.09859999999999998
Average F1: 0.6990848456646502
Average cm:
||True 0| True 1|
|-|-|-|
|Predicted 0|32.260000000000005|9.86
|Predicted 1|67.74000000000001|90.14000000000001

|Acc|Spec|Loss|
0.612|0.3226|nan
