Model has 2 inputs, class 0 is where the second input is drawn from a normal distributionwith mean of the first input, class 1 is where it isnt. Proper implementation of VAE predicting distribution with best F1
losses: ['cl5', 'mean_absolute_error', 'mean_absolute_error', 'ignore']
loss_weights: [1, 1, 1, 0]
CEweights: [[1, 10], [1, 1]]
Average accuracy: 0.7999999999999999
Balanced acc: nan
Average specificity: 0.7999999999999999
Average sensitivity (Detection rate): nan
Average loss: [0.44720207]
Average False Alarm: nan
Average F1: 0.0
Average cm:
||True 0| True 1|
|-|-|-|
|Predicted 0|9.6|0.0
|Predicted 1|2.4|0.0

|Acc|Spec|Loss|
0.7999999999999999|0.7999999999999999|[0.44720207]
CV took 93.83548807799525 seconds
Pure training took 87.3295953260058
Test result on unseen data:
Average accuracy: 0.635
Balanced acc: 0.635
Average specificity: 0.374
Average sensitivity (Detection rate): 0.8959999999999999
Average loss: nan
Average False Alarm: 0.10400000000000001
Average F1: 0.7105471847739889
Average cm:
||True 0| True 1|
|-|-|-|
|Predicted 0|37.4|10.4
|Predicted 1|62.6|89.6

|Acc|Spec|Loss|
0.635|0.374|nan
