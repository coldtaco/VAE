Model type: VAErcp2
inputsize: ListWrapper([ListWrapper([4, 4]), ListWrapper([8, 8])])
inlayersize: ListWrapper([32, 64, 128])
latentsize: 4
outlayersize: ListWrapper([128, 64, 32])
outputsize: ListWrapper([ListWrapper([1, 1])])
Model has 2 inputs, class 0 is where the second input is drawn from a normal distributionwith mean of the first input, class 1 is where it isnt. Proper implementation of VAE predicting distribution with best F1
losses: ['cl5', 'mean_absolute_error', 'mean_absolute_error', 'ignore']
loss_weights: [1, 1, 1, 0]
CEweights: [[1, 10], [1, 1]]
Average accuracy: 0.64
Balanced acc: 0.4658333333333333
Average specificity: 0.6716666666666666
Average sensitivity (Detection rate): 0.26
Average loss: [0.74054895]
Average False Alarm: 0.74
Average F1: 0.1
Average cm:
||True 0| True 1|
|-|-|-|
|Predicted 0|8.059999999999999|0.74
|Predicted 1|3.94|0.26

|Acc|Spec|Loss|
0.64|0.6716666666666666|[0.74054895]
CV took 90.63314345779945 seconds
Pure training took 82.39775417399888
Test result on unseen data:
Average accuracy: 0.4940000000000001
Balanced acc: 0.494
Average specificity: 0.656
Average sensitivity (Detection rate): 0.332
Average loss: nan
Average False Alarm: 0.6679999999999999
Average F1: 0.39618138424821014
Average cm:
||True 0| True 1|
|-|-|-|
|Predicted 0|65.6|66.8
|Predicted 1|34.39999999999999|33.2

|Acc|Spec|Loss|
0.4940000000000001|0.656|nan
