Model has 2 inputs, class 0 is where the second input is drawn from a normal distribution with mean of the first input, class 1 is where it isnt. using distance as outlier metric                
losses: ['mean_absolute_error', 'mean_absolute_error', 'ignore']
loss_weights: [1, 1, 0]
CEweights: [[1, 1], [1, 1]]
Average accuracy: 0.8384615384615385
Balanced acc: 0.5916666666666667
Average specificity: 0.8833333333333333
Average sensitivity (Detection rate): 0.3
Average loss: [0.60856038]
Average False Alarm: 0.7
Average F1: 0.22222222222222224
Average cm:
||True 0| True 1|
|-|-|-|
|Predicted 0|10.6|0.7
|Predicted 1|1.4|0.3

|Acc|Spec|Loss|
0.8384615384615385|0.8833333333333333|[0.60856038]
CV took 63.86125003000052 seconds
Pure training took 59.18982153500201
Test result on unseen data:
Average accuracy: 0.8315
Balanced acc: 0.8315
Average specificity: 0.873
Average sensitivity (Detection rate): 0.79
Average loss: nan
Average False Alarm: 0.21
Average F1: 0.8242044861763173
Average cm:
||True 0| True 1|
|-|-|-|
|Predicted 0|87.3|21.0
|Predicted 1|12.7|79.0

|Acc|Spec|Loss|
0.8315|0.873|nan
