Model has 2 inputs, class 0 is where the second input is drawn from a normal distribution with mean of the first input, class 1 is where it isnt. using distance as outlier metric                
losses: ['mean_absolute_error', 'mean_absolute_error', 'ignore']
loss_weights: [1, 1, 0]
CEweights: [[1, 1], [1, 1]]
Average accuracy: 0.8153846153846154
Balanced acc: 0.5333333333333333
Average specificity: 0.8666666666666667
Average sensitivity (Detection rate): 0.2
Average loss: [0.3767634]
Average False Alarm: 0.8
Average F1: 0.14285714285714285
Average cm:
||True 0| True 1|
|-|-|-|
|Predicted 0|10.4|0.8
|Predicted 1|1.6|0.2

|Acc|Spec|Loss|
0.8153846153846154|0.8666666666666667|[0.3767634]
CV took 76.73981099299999 seconds
Pure training took 72.35361180199834
Test result on unseen data:
Average accuracy: 0.7395
Balanced acc: 0.7395
Average specificity: 0.645
Average sensitivity (Detection rate): 0.8340000000000001
Average loss: nan
Average False Alarm: 0.166
Average F1: 0.7619917770671539
Average cm:
||True 0| True 1|
|-|-|-|
|Predicted 0|64.5|16.6
|Predicted 1|35.5|83.4

|Acc|Spec|Loss|
0.7395|0.645|nan
