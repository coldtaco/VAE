Model has 2 inputs, class 0 is where the second input is drawn from a normal distribution with mean of the first input, class 1 is where it isnt. using distance as outlier metric                
losses: ['mean_absolute_error', 'mean_absolute_error', 'ignore']
loss_weights: [1, 1, 0]
CEweights: [[1, 1], [1, 1]]
Average accuracy: 0.9153846153846155
Balanced acc: 0.8625
Average specificity: 0.9249999999999999
Average sensitivity (Detection rate): 0.8
Average loss: [0.56499761]
Average False Alarm: 0.2
Average F1: 0.5925925925925926
Average cm:
||True 0| True 1|
|-|-|-|
|Predicted 0|11.1|0.2
|Predicted 1|0.9|0.8

|Acc|Spec|Loss|
0.9153846153846155|0.9249999999999999|[0.56499761]
CV took 64.8552535680019 seconds
Pure training took 59.85514221599806
Test result on unseen data:
Average accuracy: 0.7835
Balanced acc: 0.7835
Average specificity: 0.759
Average sensitivity (Detection rate): 0.8079999999999999
Average loss: nan
Average False Alarm: 0.192
Average F1: 0.7886774036115178
Average cm:
||True 0| True 1|
|-|-|-|
|Predicted 0|75.9|19.2
|Predicted 1|24.1|80.8

|Acc|Spec|Loss|
0.7835|0.759|nan
