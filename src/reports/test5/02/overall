Model type: VAErcp
inputsize: ListWrapper([ListWrapper([4, 4]), ListWrapper([8, 8])])
inlayersize: ListWrapper([32, 64, 128])
latentsize: 4
outlayersize: ListWrapper([128, 64, 32])
outputsize: ListWrapper([ListWrapper([4, 4, 1, 1])])
Model has 2 inputs, class 0 is where the second input is drawn from a normal distribution with mean of the first input, class 1 is where it isnt. Proper implementation of VAE predicting distribution without best F1
losses: ['cl5', 'mean_absolute_error', 'mean_absolute_error', 'ignore']
loss_weights: [1, 1, 1, 0]
CEweights: [[1, 10], [1, 1]]
Average accuracy: 0.8430769230769232
Balanced acc: 0.6308333333333334
Average specificity: 0.8816666666666667
Average sensitivity (Detection rate): 0.38000000000000006
Average loss: [0.37675056]
Average False Alarm: 0.62
Average F1: 0.27142857142857146
Average cm:
||True 0| True 1|
|-|-|-|
|Predicted 0|10.579999999999998|0.62
|Predicted 1|1.4200000000000002|0.38000000000000006

|Acc|Spec|Loss|
0.8430769230769232|0.8816666666666667|[0.37675056]
CV took 109.59016793580012 seconds
Pure training took 101.97780095799972
Test result on unseen data:
Average accuracy: 0.5276
Balanced acc: 0.5276000000000001
Average specificity: 0.8512000000000001
Average sensitivity (Detection rate): 0.204
Average loss: nan
Average False Alarm: 0.7959999999999999
Average F1: 0.3015966883500887
Average cm:
||True 0| True 1|
|-|-|-|
|Predicted 0|85.12000000000002|79.6
|Predicted 1|14.879999999999999|20.4

|Acc|Spec|Loss|
0.5276|0.8512000000000001|nan
