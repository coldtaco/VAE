Model type: VAErcp
inputsize: ListWrapper([ListWrapper([4, 4]), ListWrapper([8, 8])])
inlayersize: ListWrapper([32, 64, 128])
latentsize: 4
outlayersize: ListWrapper([128, 64, 32])
outputsize: ListWrapper([ListWrapper([4, 4, 1, 1])])
Model has 2 inputs, class 0 is where the second input is drawn from a normal distributionwith mean of the first input, class 1 is where it isnt. Proper implementation of VAE predicting distribution with best F1
losses: ['cl5', 'mean_absolute_error', 'mean_absolute_error', 'ignore']
loss_weights: [1, 1, 1, 0]
CEweights: [[1, 10], [1, 1]]
Average accuracy: 0.8492307692307691
Balanced acc: 0.6158333333333333
Average specificity: 0.8916666666666666
Average sensitivity (Detection rate): 0.34
Average loss: [0.37143008]
Average False Alarm: 0.6599999999999999
Average F1: 0.2575757575757576
Average cm:
||True 0| True 1|
|-|-|-|
|Predicted 0|10.7|0.6599999999999999
|Predicted 1|1.3|0.34

|Acc|Spec|Loss|
0.8492307692307691|0.8916666666666666|[0.37143008]
CV took 108.17775298119886 seconds
Pure training took 100.5607799090003
Test result on unseen data:
Average accuracy: 0.6137999999999999
Balanced acc: 0.6138
Average specificity: 0.33380000000000004
Average sensitivity (Detection rate): 0.8937999999999999
Average loss: nan
Average False Alarm: 0.10620000000000002
Average F1: 0.69828125
Average cm:
||True 0| True 1|
|-|-|-|
|Predicted 0|33.38|10.620000000000001
|Predicted 1|66.62|89.38

|Acc|Spec|Loss|
0.6137999999999999|0.33380000000000004|nan
