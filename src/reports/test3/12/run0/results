Model has 2 inputs, class 0 is where the second input is drawn from a normal distributionwith mean of the first input, class 1 is where it isnt. Proper implementation of SVAE 
losses: ['mean_absolute_error', 'mean_absolute_error', 'KLD', 'weighted_ce']
loss_weights: [1, 1, 1, 10]
CEweights: [[1, 10], [1, 1]]
Average accuracy: 0.9307692307692308
Balanced acc: 0.9395833333333333
Average specificity: 0.9291666666666667
Average sensitivity (Detection rate): 0.95
Average loss: [2.91934875]
Average False Alarm: 0.05
Average F1: 0.6785714285714286
Average cm:
||True 0| True 1|
|-|-|-|
|Predicted 0|22.3|0.1
|Predicted 1|1.7|1.9

|Acc|Spec|Loss|
0.9307692307692308|0.9291666666666667|[2.91934875]
CV took 51.35870076299943 seconds
Pure training took 47.266978402999484
Test result on unseen data:
Average accuracy: 0.7609999999999999
Balanced acc: 0.7609999999999999
Average specificity: 0.9079999999999999
Average sensitivity (Detection rate): 0.614
Average loss: nan
Average False Alarm: 0.386
Average F1: 0.7198124267291911
Average cm:
||True 0| True 1|
|-|-|-|
|Predicted 0|90.8|38.6
|Predicted 1|9.2|61.4

|Acc|Spec|Loss|
0.7609999999999999|0.9079999999999999|nan
