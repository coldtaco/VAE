Model type: VAErcp
inputsize: ListWrapper([ListWrapper([4, 4]), ListWrapper([8, 8])])
inlayersize: ListWrapper([64, 32, 16])
latentsize: 4
outlayersize: ListWrapper([16, 32, 64])
outputsize: ListWrapper([ListWrapper([4, 4, 1, 1])])
Model has 2 inputs, class 0 is where the second input is drawn from a normal distribution with mean of the first input, class 1 is where it isnt. Proper implementation of VAE predicting distribution without best F1 using encoder
losses: ['cl5', 'mean_absolute_error', 'mean_absolute_error', 'ignore']
loss_weights: [1, 1, 1, 0]
CEweights: [[1, 10], [1, 1]]
Average accuracy: 0.7553846153846153
Balanced acc: 0.6108333333333333
Average specificity: 0.7816666666666667
Average sensitivity (Detection rate): 0.44000000000000006
Average loss: [0.77424269]
Average False Alarm: 0.56
Average F1: 0.21674876847290642
Average cm:
||True 0| True 1|
|-|-|-|
|Predicted 0|9.38|0.56
|Predicted 1|2.62|0.44000000000000006

|Acc|Spec|Loss|
0.7553846153846153|0.7816666666666667|[0.77424269]
CV took 96.18018822859995 seconds
Pure training took 89.09540492839983
Test result on unseen data:
Average accuracy: 0.5756
Balanced acc: 0.5756
Average specificity: 0.23279999999999998
Average sensitivity (Detection rate): 0.9184
Average loss: nan
Average False Alarm: 0.0816
Average F1: 0.6839439976169199
Average cm:
||True 0| True 1|
|-|-|-|
|Predicted 0|23.279999999999998|8.16
|Predicted 1|76.72|91.84

|Acc|Spec|Loss|
0.5756|0.23279999999999998|nan
