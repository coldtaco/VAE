Model type: VampriorRcp
inputsize: ListWrapper([ListWrapper([4, 4]), ListWrapper([8, 8])])
inlayersize: ListWrapper([64, 32, 16])
latentsize: 4
outlayersize: ListWrapper([16, 32, 64])
outputsize: ListWrapper([ListWrapper([4, 4, 1, 1])])
Model has 2 inputs, class 0 is where the second input is drawn from a normal distribution with mean of the first input, class 1 is where it isnt. Proper implementation of VAE predicting distribution without best F1 using encoder
losses: ['passon', 'passon', 'mean_absolute_error', 'mean_absolute_error', 'passon']
loss_weights: [1, 1, 1, 1, 10]
CEweights: [[1, 10], [1, 1]]
Average accuracy: 0.07692307692307693
Balanced acc: 0.5
Average specificity: 0.0
Average sensitivity (Detection rate): 1.0
Average loss: [13.97742019]
Average False Alarm: 0.0
Average F1: 0.14285714285714285
Average cm:
||True 0| True 1|
|-|-|-|
|Predicted 0|0.0|0.0
|Predicted 1|12.0|1.0

|Acc|Spec|Loss|
0.07692307692307693|0.0|[13.97742019]
CV took 53.74494582139941 seconds
Pure training took 46.05276517779985
Test result on unseen data:
Average accuracy: 0.5112000000000001
Balanced acc: 0.5112
Average specificity: 0.0354
Average sensitivity (Detection rate): 0.987
Average loss: nan
Average False Alarm: 0.012999999999999998
Average F1: 0.6687898089171974
Average cm:
||True 0| True 1|
|-|-|-|
|Predicted 0|3.54|1.2999999999999998
|Predicted 1|96.46|98.7

|Acc|Spec|Loss|
0.5112000000000001|0.0354|nan
